  ##
  # Redirects of legacy and standardized URLs to Catalyst Rails
  # URLs.
  # Use hard-coded hostname so that URLs coming in on 'catalog.library'
  # get redirected to proper hostname.
  ###

  # permalink format we've used before
  # /bib/123455 => /catalog/bib_12345
  RewriteRule /bib/([^/]*)$ https://catalyst.library.jhu.edu/catalog/bib_$1? [R,L]
  # And with a format on the end, just pass it on
  RewriteRule /bib/([^/]*)/([^/]*)$ https://catalyst.library.jhu.edu/catalog/bib_$1.$2 [R,L]

  # HIP direct to bib lookup
  RewriteCond %{QUERY_STRING} index=BIB&term=(\d+)
  RewriteRule ^/ipac20/ipac\.jsp https://catalyst.library.jhu.edu/catalog/bib_%1? [R,L]

  # Disable TRACE/TRACK
  # TODO: automate test like: curl --insecure -v -X TRACE https://catalyst-dev.test
  TraceEnable off

  ### TODO: test
  # Cache Rails finger-printed assets, as per
  # http://guides.rubyonrails.org/asset_pipeline.html#precompiling-assets
  # Try only match if the asset actually has a fingerprint in it.
  <LocationMatch "^/assets/.*-[0-9a-f]{32}.*$">
  #<Location /assets/>
    # Use of ETag is discouraged when Last-Modified is present
    Header unset ETag
    FileETag None
    # RFC says only cache for 1 year
    ExpiresActive On
    ExpiresDefault "access plus 1 year"
  </LocationMatch>

  ### TODO: research
  # Let apache serve the pre-compiled .gz version of static assets,
  # if available, and the user-agent can handle it. Set all headers
  # correctly when doing so.
  #
  # SOMEWHAT EXPERIMENTAL. If you think it's causing problems,
  # just remove the following three LocationMatch.
  <LocationMatch "^/assets/.*\.(css|js)$">
    RewriteEngine on

    # Make sure the browser supports gzip encoding before we send it,
    # and that we have a precompiled .gz version.
    RewriteCond %{HTTP:Accept-Encoding} \b(x-)?gzip\b
    RewriteCond %{REQUEST_FILENAME}.gz -s
    RewriteRule ^(.+)$ $1.gz
  </LocationMatch>

  # Make sure Content-Type is set for 'real' type, not gzip,
  # and Content-Encoding is there to tell browser it needs to
  # unzip to get real type.
  #
  # Make sure Vary header is set; while apache docs suggest it
  # ought to be set automatically by our RewriteCond that uses an HTTP
  # header, does not seem to be reliably working.
  <LocationMatch "^/assets/.*\.css\.gz$">
      ForceType text/css
      Header set Content-Encoding gzip
      Header add Vary Accept-Encoding
  </LocationMatch>

  <LocationMatch "^/assets/.*\.js\.gz$">
      ForceType application/javascript
      Header set Content-Encoding gzip
      Header add Vary Accept-Encoding
  </LocationMatch>
